2023-03-06 09:31:59.472 [SpringContextShutdownHook] ERROR com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1678066319472, current=DOWN, previous=UP]
2023-03-06 09:55:02.705 [SpringContextShutdownHook] ERROR com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1678067702705, current=DOWN, previous=UP]
2023-03-06 10:05:06.189 [SpringContextShutdownHook] ERROR com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1678068306189, current=DOWN, previous=UP]
2023-03-06 10:05:56.804 [http-nio-9002-exec-4] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'record.tec' in 'on clause'
### The error may exist in file [D:\java_project\zpepdi_system\eureka-client\target\classes\mapper\appraise\VolumeDao.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT         tec,         type,         IFNULL( `1`, 0 ) AS `1`,         IFNULL( `2`, 0 ) AS `2`,         IFNULL( `3`, 0 ) AS `3`,         IFNULL( `4`, 0 ) AS `4`,         IFNULL( `5`, 0 ) AS `5`,         IFNULL( `6`, 0 ) AS `6`,         IFNULL( `7`, 0 ) AS `7`,         IFNULL( `8`, 0 ) AS `8`,         IFNULL( `9`, 0 ) AS `9`,         IFNULL( `10`, 0 ) AS `10`,         IFNULL( `11`, 0 ) AS `11`,         IFNULL( `12`, 0 ) AS `12`,         IFNULL( `workday1`, 0 ) AS `workday1`,         IFNULL( `workday2`, 0 ) AS `workday2`,         IFNULL( `workday3`, 0 ) AS `workday3`,         IFNULL( `workday4`, 0 ) AS `workday4`,         IFNULL( `workday5`, 0 ) AS `workday5`,         IFNULL( `workday6`, 0 ) AS `workday6`,         IFNULL( `workday7`, 0 ) AS `workday7`,         IFNULL( `workday8`, 0 ) AS `workday8`,         IFNULL( `workday9`, 0 ) AS `workday9`,         IFNULL( `workday10`, 0 ) AS `workday10`,         IFNULL( `workday11`, 0 ) AS `workday11`,         IFNULL( `workday12`, 0 ) AS `workday12`,         IFNULL( `plan1`, 0 ) AS `plan1`,         IFNULL( `plan2`, 0 ) AS `plan2`,         IFNULL( `plan3`, 0 ) AS `plan3`,         IFNULL( `plan4`, 0 ) AS `plan4`,         IFNULL( `plan5`, 0 ) AS `plan5`,         IFNULL( `plan6`, 0 ) AS `plan6`,         IFNULL( `plan7`, 0 ) AS `plan7`,         IFNULL( `plan8`, 0 ) AS `plan8`,         IFNULL( `plan9`, 0 ) AS `plan9`,         IFNULL( `plan10`, 0 ) AS `plan10`,         IFNULL( `plan11`, 0 ) AS `plan11`,         IFNULL( `plan12`, 0 ) AS `plan12`,         IFNULL( `record1`, 0 ) AS `record1`,         IFNULL( `record2`, 0 ) AS `record2`,         IFNULL( `record3`, 0 ) AS `record3`,         IFNULL( `record4`, 0 ) AS `record4`,         IFNULL( `record5`, 0 ) AS `record5`,         IFNULL( `record6`, 0 ) AS `record6`,         IFNULL( `record7`, 0 ) AS `record7`,         IFNULL( `record8`, 0 ) AS `record8`,         IFNULL( `record9`, 0 ) AS `record9`,         IFNULL( `record10`, 0 ) AS `record10`,         IFNULL( `record11`, 0 ) AS `record11`,         IFNULL( `record12`, 0 ) AS `record12`,         IFNULL( `planWorkday1`, 0 ) AS `planWorkday1`,         IFNULL( `planWorkday2`, 0 ) AS `planWorkday2`,         IFNULL( `planWorkday3`, 0 ) AS `planWorkday3`,         IFNULL( `planWorkday4`, 0 ) AS `planWorkday4`,         IFNULL( `planWorkday5`, 0 ) AS `planWorkday5`,         IFNULL( `planWorkday6`, 0 ) AS `planWorkday6`,         IFNULL( `planWorkday7`, 0 ) AS `planWorkday7`,         IFNULL( `planWorkday8`, 0 ) AS `planWorkday8`,         IFNULL( `planWorkday9`, 0 ) AS `planWorkday9`,         IFNULL( `planWorkday10`, 0 ) AS `planWorkday10`,         IFNULL( `planWorkday11`, 0 ) AS `planWorkday11`,         IFNULL( `planWorkday12`, 0 ) AS `planWorkday12`,         IFNULL( incomplete, 0 ) AS incomplete,         IFNULL( num, 0 ) AS num,         IFNULL( `avg`, 0 ) AS `avg`,         IFNULL( ROUND( lastNum / avg, 1 ), 0 ) AS rate         FROM         (         SELECT         m.id as mid,         m.big_name AS tec,         m.did,         0 AS type,         MAX(         IF         ( m.`month` = 1, tab.num, 0 )) AS `1`,         MAX(         IF         ( m.`month` = 2, tab.num, 0 )) AS `2`,         MAX(         IF         ( m.`month` = 3, tab.num, 0 )) AS `3`,         MAX(         IF         ( m.`month` = 4, tab.num, 0 )) AS `4`,         MAX(         IF         ( m.`month` = 5, tab.num, 0 )) AS `5`,         MAX(         IF         ( m.`month` = 6, tab.num, 0 )) AS `6`,         MAX(         IF         ( m.`month` = 7, tab.num, 0 )) AS `7`,         MAX(         IF         ( m.`month` = 8, tab.num, 0 )) AS `8`,         MAX(         IF         ( m.`month` = 9, tab.num, 0 )) AS `9`,         MAX(         IF         ( m.`month` = 10, tab.num, 0 )) AS `10`,         MAX(         IF         ( m.`month` = 11, tab.num, 0 )) AS `11`,         MAX(         IF         ( m.`month` = 12, tab.num, 0 )) AS `12`,         MAX(         IF         ( m.`month` = 1, tab.workday, 0 )) AS `workday1`,         MAX(         IF         ( m.`month` = 2, tab.workday, 0 )) AS `workday2`,         MAX(         IF         ( m.`month` = 3, tab.workday, 0 )) AS `workday3`,         MAX(         IF         ( m.`month` = 4, tab.workday, 0 )) AS `workday4`,         MAX(         IF         ( m.`month` = 5, tab.workday, 0 )) AS `workday5`,         MAX(         IF         ( m.`month` = 6, tab.workday, 0 )) AS `workday6`,         MAX(         IF         ( m.`month` = 7, tab.workday, 0 )) AS `workday7`,         MAX(         IF         ( m.`month` = 8, tab.workday, 0 )) AS `workday8`,         MAX(         IF         ( m.`month` = 9, tab.workday, 0 )) AS `workday9`,         MAX(         IF         ( m.`month` = 10, tab.workday, 0 )) AS `workday10`,         MAX(         IF         ( m.`month` = 11, tab.workday, 0 )) AS `workday11`,         MAX(         IF         ( m.`month` = 12, tab.workday, 0 )) AS `workday12`,         MAX(         IF         ( m.`month` = 1, plan.num, 0 )) AS `plan1`,         MAX(         IF         ( m.`month` = 2, plan.num, 0 )) AS `plan2`,         MAX(         IF         ( m.`month` = 3, plan.num, 0 )) AS `plan3`,         MAX(         IF         ( m.`month` = 4, plan.num, 0 )) AS `plan4`,         MAX(         IF         ( m.`month` = 5, plan.num, 0 )) AS `plan5`,         MAX(         IF         ( m.`month` = 6, plan.num, 0 )) AS `plan6`,         MAX(         IF         ( m.`month` = 7, plan.num, 0 )) AS `plan7`,         MAX(         IF         ( m.`month` = 8, plan.num, 0 )) AS `plan8`,         MAX(         IF         ( m.`month` = 9, plan.num, 0 )) AS `plan9`,         MAX(         IF         ( m.`month` = 10, plan.num, 0 )) AS `plan10`,         MAX(         IF         ( m.`month` = 11, plan.num, 0 )) AS `plan11`,         MAX(         IF         ( m.`month` = 12, plan.num, 0 )) AS `plan12`,         MAX(                 IF                     ( m.`month` = 1, record.num, 0 )) AS `record1`,         MAX(                 IF                     ( m.`month` = 2, record.num, 0 )) AS `record2`,         MAX(                 IF                     ( m.`month` = 3, record.num, 0 )) AS `record3`,         MAX(                 IF                     ( m.`month` = 4, record.num, 0 )) AS `record4`,         MAX(                 IF                     ( m.`month` = 5, record.num, 0 )) AS `record5`,         MAX(                 IF                     ( m.`month` = 6, record.num, 0 )) AS `record6`,         MAX(                 IF                     ( m.`month` = 7, record.num, 0 )) AS `record7`,         MAX(                 IF                     ( m.`month` = 8, record.num, 0 )) AS `record8`,         MAX(                 IF                     ( m.`month` = 9, record.num, 0 )) AS `record9`,         MAX(                 IF                     ( m.`month` = 10, record.num, 0 )) AS `record10`,         MAX(                 IF                     ( m.`month` = 11, record.num, 0 )) AS `record11`,         MAX(                 IF                     ( m.`month` = 12, record.num, 0 )) AS `record12`,         MAX(         IF         ( m.`month` = 1, plan.workday, 0 )) AS `planWorkday1`,         MAX(         IF         ( m.`month` = 2, plan.workday, 0 )) AS `planWorkday2`,         MAX(         IF         ( m.`month` = 3, plan.workday, 0 )) AS `planWorkday3`,         MAX(         IF         ( m.`month` = 4, plan.workday, 0 )) AS `planWorkday4`,         MAX(         IF         ( m.`month` = 5, plan.workday, 0 )) AS `planWorkday5`,         MAX(         IF         ( m.`month` = 6, plan.workday, 0 )) AS `planWorkday6`,         MAX(         IF         ( m.`month` = 7, plan.workday, 0 )) AS `planWorkday7`,         MAX(         IF         ( m.`month` = 8, plan.workday, 0 )) AS `planWorkday8`,         MAX(         IF         ( m.`month` = 9, plan.workday, 0 )) AS `planWorkday9`,         MAX(         IF         ( m.`month` = 10, plan.workday, 0 )) AS `planWorkday10`,         MAX(         IF         ( m.`month` = 11, plan.workday, 0 )) AS `planWorkday11`,         MAX(         IF         ( m.`month` = 12, plan.workday, 0 )) AS `planWorkday12`,         max(         IF         ( tab.`month` = DATE_FORMAT( NOW() - INTERVAL 1 MONTH, "%m" ), tab.num, 0 )) AS lastNum,         inc.incomplete,         s.num AS num,         ROUND( num6 / 6, 0 ) AS `avg`         FROM         ( SELECT DISTINCT m.id, m.small_name, m.big_name, mon.`month`, m.did FROM major_contrast_technology m, `month` mon ) AS m         LEFT JOIN (         SELECT         COUNT(*) AS num,         SUM( w.workday ) AS workday,         m.big_name AS tec,         m.did,         mon.`month` AS `month`         FROM         project p,         major_contrast_technology m,         `month` mon         LEFT JOIN volume v ON DATE_FORMAT( v.actual_publication_date, '%m' ) = mon.`month`         LEFT JOIN volume_workday w ON v.id = w.volume_id         WHERE         p.id = v.project_id         AND v.tec = m.small_name         AND RIGHT ( p.number, 1 ) = "s"         AND v.actual_publication_date LIKE CONCAT(?,"%")         AND v.number NOT LIKE "%+%"         GROUP BY         m.big_name,         mon.`month`         ) AS tab ON tab.tec = m.big_name         AND tab.`month` = m.`month`         LEFT JOIN (         SELECT         COUNT(*) AS num,         sum( w.workday ) AS workday,         m.big_name AS tec         FROM         project p,         major_contrast_technology m,         volume v         LEFT JOIN volume_workday w ON w.volume_id = v.id         WHERE         p.id = v.project_id         AND v.tec = m.small_name         AND RIGHT ( p.number, 1 ) = "s"         AND v.actual_publication_date LIKE CONCAT(?,"%")         AND v.number NOT LIKE "%+%"         GROUP BY         m.big_name         ) AS s ON s.tec = m.big_name         LEFT JOIN (         SELECT         COUNT(*) AS num,         SUM( w.workday ) AS workday,         m.big_name AS tec,         m.did,         DATE_FORMAT( v.planned_publication_date, '%m' ) AS `month`         FROM         project p,         major_contrast_technology m,         (SELECT              v.id,              v.project_id,              v.tec,              v.planned_publication_date          FROM              volume v          WHERE v.planned_publication_date LIKE CONCAT(?,"%")            AND v.number NOT LIKE "%+%"         ) as v         LEFT JOIN volume_workday w ON w.volume_id = v.id         WHERE         p.id = v.project_id         AND v.tec = m.small_name         AND RIGHT ( p.number, 1 ) = "s"         GROUP BY         m.big_name,         DATE_FORMAT( v.planned_publication_date, '%m' )) AS plan ON m.big_name = plan.tec         AND plan.`month` = m.`month`         left join (             SELECT                 COUNT(*) AS num,                 m.big_name,                 RIGHT ( c.plan_month, 2 ) AS `month`             FROM                 project p,                 major_contrast_technology m,                 check_plan c,                 check_plan_volume vp             WHERE                 RIGHT ( p.number, 1 ) = "s"               AND p.id = c.project_id               AND vp.number NOT LIKE "%+%"               AND c.id = vp.check_plan_id               AND c.tec = m.small_name               AND c.plan_month LIKE CONCAT(?,"%")             GROUP BY                 m.big_name, c.plan_month             ) as record on record.tec = m.big_name and record.`month` = m.`month`         LEFT JOIN (         SELECT         COUNT(*) AS incomplete,         m.big_name AS tec         FROM         (         SELECT         v.id,         v.tec         FROM         project p,         volume v         WHERE         RIGHT ( p.number, 1 ) = "s"         AND p.id = v.project_id         AND v.number NOT LIKE "%+%"         AND v.actual_publication_date IS NULL UNION         SELECT         v.id,         v.tec         FROM         project p,         volume v         WHERE         RIGHT ( p.number, 1 ) = "s"         AND p.id = v.project_id         AND v.number NOT LIKE "%+%"         AND v.actual_publication_date = ""         ) AS v,         major_contrast_technology m         WHERE         v.tec = m.small_name         GROUP BY         m.big_name         ) AS inc ON inc.tec = m.big_name         LEFT JOIN (         SELECT         COUNT( v.id ) AS num6,         m.big_name AS tec         FROM         project p,         major_contrast_technology m,         volume v         WHERE         RIGHT ( p.number, 1 ) = "s"         AND v.tec = m.small_name         AND p.id = v.project_id         AND v.number NOT LIKE "%+%"         AND v.actual_publication_date >= DATE_FORMAT( NOW()- INTERVAL '6' MONTH, "%Y-%m-01" )         AND v.actual_publication_date < DATE_FORMAT( NOW(), "%Y-%m-01" )         GROUP BY         m.big_name         ) AS a ON a.tec = m.big_name         GROUP BY         tec UNION         SELECT         m.id as mid,         m.big_name AS tec,         m.did,         1 AS type,         MAX(         IF         ( m.`month` = 1, tab.num, 0 )) AS `1`,         MAX(         IF         ( m.`month` = 2, tab.num, 0 )) AS `2`,         MAX(         IF         ( m.`month` = 3, tab.num, 0 )) AS `3`,         MAX(         IF         ( m.`month` = 4, tab.num, 0 )) AS `4`,         MAX(         IF         ( m.`month` = 5, tab.num, 0 )) AS `5`,         MAX(         IF         ( m.`month` = 6, tab.num, 0 )) AS `6`,         MAX(         IF         ( m.`month` = 7, tab.num, 0 )) AS `7`,         MAX(         IF         ( m.`month` = 8, tab.num, 0 )) AS `8`,         MAX(         IF         ( m.`month` = 9, tab.num, 0 )) AS `9`,         MAX(         IF         ( m.`month` = 10, tab.num, 0 )) AS `10`,         MAX(         IF         ( m.`month` = 11, tab.num, 0 )) AS `11`,         MAX(         IF         ( m.`month` = 12, tab.num, 0 )) AS `12`,         MAX(         IF         ( m.`month` = 1, tab.workday, 0 )) AS `workday1`,         MAX(         IF         ( m.`month` = 2, tab.workday, 0 )) AS `workday2`,         MAX(         IF         ( m.`month` = 3, tab.workday, 0 )) AS `workday3`,         MAX(         IF         ( m.`month` = 4, tab.workday, 0 )) AS `workday4`,         MAX(         IF         ( m.`month` = 5, tab.workday, 0 )) AS `workday5`,         MAX(         IF         ( m.`month` = 6, tab.workday, 0 )) AS `workday6`,         MAX(         IF         ( m.`month` = 7, tab.workday, 0 )) AS `workday7`,         MAX(         IF         ( m.`month` = 8, tab.workday, 0 )) AS `workday8`,         MAX(         IF         ( m.`month` = 9, tab.workday, 0 )) AS `workday9`,         MAX(         IF         ( m.`month` = 10, tab.workday, 0 )) AS `workday10`,         MAX(         IF         ( m.`month` = 11, tab.workday, 0 )) AS `workday11`,         MAX(         IF         ( m.`month` = 12, tab.workday, 0 )) AS `workday12`,         MAX(         IF         ( m.`month` = 1, plan.num, 0 )) AS `plan1`,         MAX(         IF         ( m.`month` = 2, plan.num, 0 )) AS `plan2`,         MAX(         IF         ( m.`month` = 3, plan.num, 0 )) AS `plan3`,         MAX(         IF         ( m.`month` = 4, plan.num, 0 )) AS `plan4`,         MAX(         IF         ( m.`month` = 5, plan.num, 0 )) AS `plan5`,         MAX(         IF         ( m.`month` = 6, plan.num, 0 )) AS `plan6`,         MAX(         IF         ( m.`month` = 7, plan.num, 0 )) AS `plan7`,         MAX(         IF         ( m.`month` = 8, plan.num, 0 )) AS `plan8`,         MAX(         IF         ( m.`month` = 9, plan.num, 0 )) AS `plan9`,         MAX(         IF         ( m.`month` = 10, plan.num, 0 )) AS `plan10`,         MAX(         IF         ( m.`month` = 11, plan.num, 0 )) AS `plan11`,         MAX(         IF         ( m.`month` = 12, plan.num, 0 )) AS `plan12`,         MAX(                 IF                     ( m.`month` = 1, record.num, 0 )) AS `record1`,         MAX(                 IF                     ( m.`month` = 2, record.num, 0 )) AS `record2`,         MAX(                 IF                     ( m.`month` = 3, record.num, 0 )) AS `record3`,         MAX(                 IF                     ( m.`month` = 4, record.num, 0 )) AS `record4`,         MAX(                 IF                     ( m.`month` = 5, record.num, 0 )) AS `record5`,         MAX(                 IF                     ( m.`month` = 6, record.num, 0 )) AS `record6`,         MAX(                 IF                     ( m.`month` = 7, record.num, 0 )) AS `record7`,         MAX(                 IF                     ( m.`month` = 8, record.num, 0 )) AS `record8`,         MAX(                 IF                     ( m.`month` = 9, record.num, 0 )) AS `record9`,         MAX(                 IF                     ( m.`month` = 10, record.num, 0 )) AS `record10`,         MAX(                 IF                     ( m.`month` = 11, record.num, 0 )) AS `record11`,         MAX(                 IF                     ( m.`month` = 12, record.num, 0 )) AS `record12`,         MAX(         IF         ( m.`month` = 1, plan.workday, 0 )) AS `planWorkday1`,         MAX(         IF         ( m.`month` = 2, plan.workday, 0 )) AS `planWorkday2`,         MAX(         IF         ( m.`month` = 3, plan.workday, 0 )) AS `planWorkday3`,         MAX(         IF         ( m.`month` = 4, plan.workday, 0 )) AS `planWorkday4`,         MAX(         IF         ( m.`month` = 5, plan.workday, 0 )) AS `planWorkday5`,         MAX(         IF         ( m.`month` = 6, plan.workday, 0 )) AS `planWorkday6`,         MAX(         IF         ( m.`month` = 7, plan.workday, 0 )) AS `planWorkday7`,         MAX(         IF         ( m.`month` = 8, plan.workday, 0 )) AS `planWorkday8`,         MAX(         IF         ( m.`month` = 9, plan.workday, 0 )) AS `planWorkday9`,         MAX(         IF         ( m.`month` = 10, plan.workday, 0 )) AS `planWorkday10`,         MAX(         IF         ( m.`month` = 11, plan.workday, 0 )) AS `planWorkday11`,         MAX(         IF         ( m.`month` = 12, plan.workday, 0 )) AS `planWorkday12`,         max(         IF         ( tab.`month` = DATE_FORMAT( NOW() - INTERVAL 1 MONTH, "%m" ), tab.num, 0 )) AS lastNum,         inc.incomplete,         s.num AS num,         ROUND( num6 / 6, 0 ) AS `avg`         FROM         ( SELECT DISTINCT m.id, m.small_name, m.big_name, mon.`month`, m.did FROM major_contrast_technology m, `month` mon ) AS m         LEFT JOIN (         SELECT         COUNT(*) AS num,         SUM( w.workday ) AS workday,         m.big_name AS tec,         m.did,         mon.`month` AS `month`         FROM         project p,         major_contrast_technology m,         `month` mon         LEFT JOIN volume v ON DATE_FORMAT( v.actual_publication_date, '%m' ) = mon.`month`         LEFT JOIN volume_workday w ON v.id = w.volume_id         WHERE         p.id = v.project_id         AND v.tec = m.small_name         AND RIGHT ( p.number, 1 ) = "s"         AND v.actual_publication_date LIKE CONCAT(?,"%")         AND v.number LIKE "%+%"         GROUP BY         m.big_name,         mon.`month`         ) AS tab ON tab.tec = m.big_name         AND tab.`month` = m.`month`         LEFT JOIN (         SELECT         COUNT(*) AS num,         m.big_name AS tec         FROM         project p,         major_contrast_technology m,         volume v         WHERE         p.id = v.project_id         AND v.tec = m.small_name         AND RIGHT ( p.number, 1 ) = "s"         AND v.actual_publication_date LIKE CONCAT(?,"%")         AND v.number LIKE "%+%"         GROUP BY         m.big_name         ) AS s ON s.tec = m.big_name         LEFT JOIN (         SELECT         COUNT(*) AS num,         SUM( w.workday ) AS workday,         m.big_name AS tec,         m.did,         DATE_FORMAT( v.planned_publication_date, '%m' ) AS `month`         FROM         project p,         major_contrast_technology m,         (SELECT              v.id,              v.project_id,              v.tec,              v.planned_publication_date          FROM              volume v          WHERE v.planned_publication_date LIKE CONCAT(?,"%")            AND v.number LIKE "%+%"         ) as v         LEFT JOIN volume_workday w ON v.id = w.volume_id         WHERE         p.id = v.project_id         AND v.tec = m.small_name         AND RIGHT ( p.number, 1 ) = "s"         GROUP BY         m.big_name,         DATE_FORMAT( v.planned_publication_date, '%m' )) AS plan ON m.big_name = plan.tec         AND plan.`month` = m.`month`         left join (             SELECT                 COUNT(*) AS num,                 m.big_name,                 RIGHT ( c.plan_month, 2 ) AS `month`             FROM                 project p,                 major_contrast_technology m,                 check_plan c,                 check_plan_volume vp             WHERE                 RIGHT ( p.number, 1 ) = "s"               AND p.id = c.project_id               AND vp.number NOT LIKE "%+%"               AND c.id = vp.check_plan_id               AND c.tec = m.small_name               AND c.plan_month LIKE CONCAT(?,"%")             GROUP BY                 m.big_name, c.plan_month         ) as record on record.tec = m.big_name and record.`month` = m.`month`         LEFT JOIN (         SELECT         COUNT(*) AS incomplete,         m.big_name AS tec         FROM         (         SELECT         v.id,         v.tec         FROM         project p,         volume v         WHERE         RIGHT ( p.number, 1 ) = "s"         AND p.id = v.project_id         AND v.number LIKE "%+%"         AND v.actual_publication_date IS NULL UNION         SELECT         v.id,         v.tec         FROM         project p,         volume v         WHERE         RIGHT ( p.number, 1 ) = "s"         AND p.id = v.project_id         AND v.number LIKE "%+%"         AND v.actual_publication_date = ""         ) AS v,         major_contrast_technology m         WHERE         v.tec = m.small_name         GROUP BY         m.big_name         ) AS inc ON inc.tec = m.big_name         LEFT JOIN (         SELECT         COUNT( v.id ) AS num6,         m.big_name AS tec         FROM         project p,         major_contrast_technology m,         volume v         WHERE         RIGHT ( p.number, 1 ) = "s"         AND v.tec = m.small_name         AND p.id = v.project_id         AND v.number LIKE "%+%"         AND v.actual_publication_date >= DATE_FORMAT( NOW()- INTERVAL '6' MONTH, "%Y-%m-01" )         AND v.actual_publication_date < DATE_FORMAT( NOW(), "%Y-%m-01" )         GROUP BY         m.big_name         ) AS a ON a.tec = m.big_name         GROUP BY         tec         ) AS tab         GROUP BY         tec,         `type`         ORDER BY         mid desc, `type`
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'record.tec' in 'on clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'record.tec' in 'on clause'] with root cause
java.sql.SQLSyntaxErrorException: Unknown column 'record.tec' in 'on clause'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy276.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.zpepdi.eureka_client.interceptor.SQLInterceptor.intercept(SQLInterceptor.java:40)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy274.query(Unknown Source)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:141)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy274.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy125.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy151.tecProgress(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy152.tecProgress(Unknown Source)
	at com.zpepdi.eureka_client.service.impl.VolumeServiceImpl.tecProgress(VolumeServiceImpl.java:271)
	at com.zpepdi.eureka_client.service.impl.VolumeServiceImpl$$FastClassBySpringCGLIB$$7d3b9e7e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.zpepdi.eureka_client.service.impl.VolumeServiceImpl$$EnhancerBySpringCGLIB$$372440f5.tecProgress(<generated>)
	at com.zpepdi.eureka_client.controller.VolumeController.tecProgress(VolumeController.java:111)
	at com.zpepdi.eureka_client.controller.VolumeController$$FastClassBySpringCGLIB$$82150f0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.zpepdi.eureka_client.interceptor.MessageAspect.doAround(MessageAspect.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.zpepdi.eureka_client.controller.VolumeController$$EnhancerBySpringCGLIB$$1ebcada9.tecProgress(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.zpepdi.eureka_client.interceptor.SystemHttpWhere.doFilter(SystemHttpWhere.java:23)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-06 10:07:35.947 [SpringContextShutdownHook] ERROR com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1678068455947, current=DOWN, previous=UP]
2023-03-06 10:12:52.914 [SpringContextShutdownHook] ERROR com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1678068772914, current=DOWN, previous=UP]
2023-03-06 10:16:28.471 [SpringContextShutdownHook] ERROR com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1678068988471, current=DOWN, previous=UP]
