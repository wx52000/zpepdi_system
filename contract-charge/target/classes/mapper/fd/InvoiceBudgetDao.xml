<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zpepdi.system.dao.fd.InvoiceBudgetDao">
    <resultMap id="queryByContractId" type="map">
        <result column="year" jdbcType="INTEGER" property="year"/>
        <result column="contract_id" jdbcType="CHAR" property="contract_id"/>
        <result column="year_budget" jdbcType="DECIMAL" property="year_budget"/>
        <result column="quarter1_budget" jdbcType="DECIMAL" property="quarter1"/>
        <result column="quarter2_budget" jdbcType="DECIMAL" property="quarter2"/>
        <result column="quarter3_budget" jdbcType="DECIMAL" property="quarter3"/>
        <result column="quarter4_budget" jdbcType="DECIMAL" property="quarter4"/>
        <collection property="monthList" javaType="ARRAYLIST"
                    column="year=year, contract_id= contract_id"
                    select="queryMonthByContractId"/>
        <collection property="quarterList" javaType="ARRAYLIST"
                    column="year=year, contract_id = contract_id"
                    select="queryQuarterByContractId"/>
    </resultMap>
    <update id="setBudgetMonth">
        insert into invoice_budget_month(contract_id, `budget`, `month`, quarter,
                                         `year`, `time`, handler,single, `remark`, `type`, expend)
        values (#{map.contract_id}, #{map.budget}, #{map.month},
                #{map.quarter}, #{map.year}, now(), #{userId}, #{map.single}, #{map.remark}, #{map.type}, #{map.expend})
        on duplicate key update
        `budget` = values(`budget`),
        `expend` = values(`expend`),
        `time` = values(`time`),
        `handler` = values(`handler`),
        `remark` = values(`remark`)
    </update>
    <update id="setBudgetYear">
        insert into invoice_budget_year(contract_id, `year_budget`, quarter1_budget,quarter2_budget,
                                quarter3_budget, quarter4_budget, `year`, `time`, handler)
        values (#{map.contract_id}, #{map.year_budget}, #{map.quarter1}, #{map.quarter2},
                #{map.quarter3}, #{map.quarter4}, #{map.year}, now(), #{userId})
        on duplicate key update
        `year_budget` = values(`year_budget`),
        `quarter1_budget` = values(`quarter1_budget`),
        `quarter2_budget` = values(`quarter2_budget`),
        `quarter3_budget` = values(`quarter3_budget`),
        `quarter4_budget` = values(`quarter4_budget`),
        `time` = values(`time`),
        `handler` = values(`handler`)
    </update>
    <update id="setQuarter">
        insert into invoice_budget_quarter(contract_id, quarter_budget, month1_budget,
                                           month2_budget, month3_budget, year ,quarter, time, handler)
        values(#{map.id}, #{map.quarter_budget}, #{map.month1_budget}, #{map.month2_budget},
               #{map.month3_budget}, #{map.year}, #{map.quarter}, now(), #{userId})
            on duplicate key update
                                 quarter_budget  = values(quarter_budget),
                                 month1_budget  = values(month1_budget),
                                 month2_budget  = values(month2_budget),
                                 month3_budget  = values(month3_budget),
                                 `time`  = values(`time`)
    </update>
    <select id="queryMonthByContractId" resultType="java.util.Map">
        SELECT
            b.`budget`,
            b.`month`,
            b.`quarter`,
            b.`year`,
            b.single,
            b.remark,
            b.`type`,
            b.expend,
            i.budget as income_budget
        FROM
            invoice_budget_month b
                LEFT JOIN income_budget_month i ON i.contract_id = b.contract_id
                AND b.`year` = i.`year`
                AND b.`month` = i.`month`
                AND b.type = i.type
                AND b.single = i.single

        WHERE
            b.contract_id = #{contract_id}

          AND b.`year` = #{year}

        ORDER BY
            `month`
    </select>
    <select id="queryByContractId" resultMap="queryByContractId">
        select ifnull(`year_budget`,0) as year_budget,
               ifnull(quarter1_budget,0) as quarter1_budget,
               ifnull(quarter2_budget,0) as quarter2_budget,
               ifnull(quarter3_budget,0) as quarter3_budget,
               ifnull(quarter4_budget,0) as quarter4_budget, `year`, contract_id
        from invoice_budget_year
        where contract_id= #{contract_id}
          and `year` = #{year}
    </select>
    <select id="queryQuarterByContractId" resultType="java.util.Map">
        select
            quarter,
            quarter_budget,
            month1_budget,
            month2_budget,
            month3_budget
        from invoice_budget_quarter
        where contract_id = #{contract_id}
          and `year` = #{year}
        order by quarter
    </select>
    <select id="queryNowById" resultType="java.util.Map">
        SELECT
            c.id,
            y.year_budget,
            y.quarter1_budget,
            y.quarter2_budget,
            y.quarter3_budget,
            y.quarter4_budget,
            q.quarter_budget,
            q.month1_budget,
            q.month2_budget,
            q.month3_budget,
            SUM( m.budget ) AS invoice,
            SUM( m1.budget ) AS invoice1
        FROM
            contract c
                LEFT JOIN invoice_budget_year y ON c.id = y.contract_id
                AND y.`year` = #{year}
                LEFT JOIN invoice_budget_quarter q ON c.id = q.contract_id
                AND q.`year` = #{year}
                AND `quarter` = #{quarter}
                LEFT JOIN invoice_budget_month m ON c.id = m.contract_id
                AND m.`year` = #{year}
                AND m.`month` = #{month}
                LEFT JOIN invoice_budget_month m1 ON c.id = m1.contract_id
                AND m1.`year` = #{nextMonthYear}
                AND m1.`month` = #{nextMonth}
        WHERE
            c.id = #{id}
    </select>
    <select id="queryAllMonthByContractId" resultType="java.util.Map">
        SELECT
            id,
            CONCAT( `year`, '-', `month` ) as `date`,
            budget
        FROM
            invoice_budget_month
        WHERE
            contract_id = #{id}
    </select>
</mapper>